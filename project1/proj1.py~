import nltk

# following book p.91 
def IBM1(enC, nlC):
    cef = 0
    totf = 0

    for i in range(len(enC)):
        enC[i].append('NULL')
    
    pairs = [[(e,f) for e in enC[i] for f in nlC[i]] for i in range(1000)]
    P = [p for p in prs for prs in pairs]
    
        
    
def loadData(fileloc):
    toker = nltk.tokenize.RegexpTokenizer(r'((?<=[^\w\s])\w(?=[^\w\s])|(\W))+', gaps=True)
    st = nltk.stem.porter.PorterStemmer()

    sents = []
    with open(fileloc) as f:
        for s in f.readlines():
            sents.append([w.lower() for w in toker.tokenize(s)])
    
    return sents


if __name__=="__main__":
    enSnts = loadData('corpus_1000.en')
    nlSnts = loadData('corpus_1000.nl')
    print('eh')
    IBM1(enSnts,nlSnts)
